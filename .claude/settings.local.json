{
  "permissions": {
    "allow": [
      "Bash(npm run build:*)",
      "Bash(npm run lint)",
      "Bash(npm run test:*)",
      "Bash(timeout 10s npm run dev)",
      "Bash(npx tsc:*)",
      "WebFetch(domain:www.themoviedb.org)",
      "WebFetch(domain:developer.themoviedb.org)",
      "WebSearch",
      "Bash(rm:*)",
      "WebFetch(domain:chapterdb.plex.tv)",
      "Bash(npx supabase migration:*)",
      "Bash(npx supabase:*)",
      "Bash(curl:*)",
      "Bash(npx eslint:*)",
      "Bash(npm run dev:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(npm run lint:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/integrations/tmdb/__tests__/client.security.test.ts)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/integrations/supabase/__tests__/client.security.test.ts)",
      "Bash(printenv)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/security/__tests__/environment.security.test.ts)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- --reporter=verbose src/integrations/tmdb/__tests__/client.security.test.ts src/integrations/supabase/__tests__/client.security.test.ts src/security/__tests__/environment.security.test.ts)",
      "Bash(git check-ignore:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(vercel env add:*)",
      "Bash(supabase secrets:*)",
      "Bash(supabase functions:*)",
      "Bash(supabase status:*)",
      "Bash(supabase projects:*)",
      "Bash(vercel env:*)",
      "Bash(vercel link:*)",
      "Bash(vercel:*)",
      "WebFetch(domain:github.com)",
      "Bash(echo:*)",
      "Bash(git pull:*)",
      "Bash(npm install:*)",
      "Bash(npx playwright install:*)",
      "Bash(npx lhci:*)",
      "Bash(git checkout:*)",
      "Bash(timeout 10s npm run preview -- --port 4173 --host)",
      "Bash(python:*)",
      "Bash(gh run list:*)",
      "Bash(sudo dd:*)",
      "Bash(sudo chmod:*)",
      "Bash(sudo tee:*)",
      "Bash(sudo apt:*)",
      "Bash(sudo apt install:*)",
      "Bash(timeout 5s npm run preview:*)",
      "Bash(node:*)",
      "Bash(unzip:*)",
      "Bash(./bin/gh.exe:*)",
      "Bash(gh run view:*)",
      "Bash(npm test:*)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts --reporter=verbose)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts --testNamePattern=\"should insert new wigg entry to Supabase when addWigg is called\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts --testNamePattern=\"should insert new wigg entry to Supabase when addWigg is called\" --reporter=verbose)",
      "Bash(export TDD_GUARD_DISABLED=true)",
      "Read(//c/Users/gatli/**)",
      "Bash(cat:*)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts --testNamePattern=\"should identify test data correctly\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts --testNamePattern=\"should filter test entries\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts --testNamePattern=\"should detect test environment\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/components/wigg/__tests__/RealtimeWiggOverlay.test.tsx --testNamePattern=\"should show visual indicators\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts src/components/wigg/__tests__/RealtimeWiggOverlay.test.tsx)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts --testNamePattern=\"should detect production vs non-production\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts --testNamePattern=\"should correctly identify wigg.app\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/components/wigg/__tests__/RealtimeWiggOverlay.test.tsx --testNamePattern=\"should show environment indicator\")",
      "Bash(gh pr list:*)",
      "Bash(gh pr view:*)",
      "Bash(gh api:*)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts --testNamePattern=\"should return loading state|should load wigg entries|should add new wigg entry\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/integrations/supabase/__tests__/client.environment.test.ts)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/integrations/supabase/__tests__/client.environment.test.ts --reporter=verbose)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts --testNamePattern=\"should use centralized auth state instead of direct Supabase calls\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts --testNamePattern=\"should use centralized auth state instead of direct Supabase calls\" --reporter=verbose)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/components/wigg/__tests__/RealtimeWiggOverlay.test.tsx)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts --testNamePattern=\"should use centralized auth state\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/monitoring/__tests__/sentry.test.ts --run)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/monitoring/__tests__/sentry.test.ts --reporter=verbose)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/monitoring/__tests__/sentry.test.ts --testNamePattern=\"should not call Sentry.init when DSN is not provided\" --reporter=verbose)",
      "Bash(TDD_GUARD_DISABLED=true)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/monitoring/__tests__/sentry.test.ts)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/components/media/__tests__/MediaTile.auth.test.tsx)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/components/media/__tests__/)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "C:\\Users\\gatli\\Projects"
    ]
  },
  "hooks": {
    "PreToolUse": [],
    "UserPromptSubmit": [],
    "SessionStart": []
  }
}