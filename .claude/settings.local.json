{
  "permissions": {
    "allow": [
      "Bash(npm run build:*)",
      "Bash(npm run lint)",
      "Bash(npm run test:*)",
      "Bash(timeout 10s npm run dev)",
      "Bash(npx tsc:*)",
      "WebFetch(domain:www.themoviedb.org)",
      "WebFetch(domain:developer.themoviedb.org)",
      "WebSearch",
      "Bash(rm:*)",
      "WebFetch(domain:chapterdb.plex.tv)",
      "Bash(npx supabase migration:*)",
      "Bash(npx supabase:*)",
      "Bash(curl:*)",
      "Bash(npx eslint:*)",
      "Bash(npm run dev:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(npm run lint:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/integrations/tmdb/__tests__/client.security.test.ts)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/integrations/supabase/__tests__/client.security.test.ts)",
      "Bash(printenv)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/security/__tests__/environment.security.test.ts)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- --reporter=verbose src/integrations/tmdb/__tests__/client.security.test.ts src/integrations/supabase/__tests__/client.security.test.ts src/security/__tests__/environment.security.test.ts)",
      "Bash(git check-ignore:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(vercel env add:*)",
      "Bash(supabase secrets:*)",
      "Bash(supabase functions:*)",
      "Bash(supabase status:*)",
      "Bash(supabase projects:*)",
      "Bash(vercel env:*)",
      "Bash(vercel link:*)",
      "Bash(vercel:*)",
      "WebFetch(domain:github.com)",
      "Bash(echo:*)",
      "Bash(git pull:*)",
      "Bash(npm install:*)",
      "Bash(npx playwright install:*)",
      "Bash(npx lhci:*)",
      "Bash(git checkout:*)",
      "Bash(timeout 10s npm run preview -- --port 4173 --host)",
      "Bash(python:*)",
      "Bash(gh run list:*)",
      "Bash(sudo dd:*)",
      "Bash(sudo chmod:*)",
      "Bash(sudo tee:*)",
      "Bash(sudo apt:*)",
      "Bash(sudo apt install:*)",
      "Bash(timeout 5s npm run preview:*)",
      "Bash(node:*)",
      "Bash(unzip:*)",
      "Bash(./bin/gh.exe:*)",
      "Bash(gh run view:*)",
      "Bash(npm test:*)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts --reporter=verbose)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts --testNamePattern=\"should insert new wigg entry to Supabase when addWigg is called\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts --testNamePattern=\"should insert new wigg entry to Supabase when addWigg is called\" --reporter=verbose)",
      "Bash(export TDD_GUARD_DISABLED=true)",
      "Read(//c/Users/gatli/**)",
      "Bash(cat:*)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts --testNamePattern=\"should identify test data correctly\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts --testNamePattern=\"should filter test entries\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts --testNamePattern=\"should detect test environment\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/components/wigg/__tests__/RealtimeWiggOverlay.test.tsx --testNamePattern=\"should show visual indicators\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts src/components/wigg/__tests__/RealtimeWiggOverlay.test.tsx)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts --testNamePattern=\"should detect production vs non-production\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts --testNamePattern=\"should correctly identify wigg.app\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/components/wigg/__tests__/RealtimeWiggOverlay.test.tsx --testNamePattern=\"should show environment indicator\")",
      "Bash(gh pr list:*)",
      "Bash(gh pr view:*)",
      "Bash(gh api:*)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts --testNamePattern=\"should return loading state|should load wigg entries|should add new wigg entry\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/integrations/supabase/__tests__/client.environment.test.ts)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/integrations/supabase/__tests__/client.environment.test.ts --reporter=verbose)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts --testNamePattern=\"should use centralized auth state instead of direct Supabase calls\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts --testNamePattern=\"should use centralized auth state instead of direct Supabase calls\" --reporter=verbose)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/components/wigg/__tests__/RealtimeWiggOverlay.test.tsx)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserWiggs.test.ts --testNamePattern=\"should use centralized auth state\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/monitoring/__tests__/sentry.test.ts --run)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/monitoring/__tests__/sentry.test.ts --reporter=verbose)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/monitoring/__tests__/sentry.test.ts --testNamePattern=\"should not call Sentry.init when DSN is not provided\" --reporter=verbose)",
      "Bash(TDD_GUARD_DISABLED=true)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/monitoring/__tests__/sentry.test.ts)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/components/media/__tests__/MediaTile.auth.test.tsx)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/components/media/__tests__/)",
      "Bash(git switch:*)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/components/__tests__/WiggPointForm.test.tsx --testNamePattern=\"should pass spoiler level as proper numeric type not any\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserPreferences.test.ts)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/components/__tests__/WiggPointForm.test.tsx --testNamePattern=\"should properly handle form state without manual getValues/setValue calls\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/social/__tests__/useWiggLikes.test.ts)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/api/__tests__/base.test.ts)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/api/services/__tests__/media.test.ts)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/api/services/__tests__/wiggPoints.test.ts)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/components/__tests__/WiggPointForm.test.tsx --testNamePattern=\"should use WIGG Point Service instead of direct Supabase calls\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/components/__tests__/WiggPointForm.test.tsx --testNamePattern=\"should submit form successfully with valid data\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/api/services/__tests__/social.test.ts)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/api/__tests__/types.test.ts)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/api/services/__tests__/social.test.ts --testNamePattern=\"should toggle like on WIGG point\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/api/services/__tests__/social.test.ts --testNamePattern=\"should get like count for WIGG point\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/api/services/__tests__/social.test.ts --testNamePattern=\"should check if user has liked WIGG point\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/api/services/__tests__/social.test.ts --testNamePattern=\"should remove like when toggling off\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/social/__tests__/useWiggLikes.test.ts --testNamePattern=\"should use social service instead of direct Supabase calls\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/api/services/__tests__/social.test.ts --testNamePattern=\"should handle errors in getFollowerCounts with standardized error response\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/api/services/__tests__/social.test.ts --testNamePattern=\"should return error response instead of throwing for getLikeCount\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/api/services/__tests__/social.test.ts --testNamePattern=\"should return error response instead of throwing for hasUserLiked\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/api/services/__tests__/wiggPoints.test.ts --testNamePattern=\"should handle errors in media creation with standardized error response\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/api/services/__tests__/userProfile.test.ts --testNamePattern=\"should get user preferences successfully\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/api/services/__tests__/userProfile.test.ts --testNamePattern=\"should update user preferences successfully\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/api/services/__tests__/userProfile.test.ts)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/__tests__/useUserPreferences.test.ts --testNamePattern=\"should use User Profile Service instead of direct Supabase calls\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/api/services/__tests__/social.test.ts --testNamePattern=\"should get comments for WIGG point\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/api/services/__tests__/social.test.ts --testNamePattern=\"should add comment to WIGG point\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/api/services/__tests__/social.test.ts --testNamePattern=\"should delete comment from WIGG point\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/api/services/__tests__/social.test.ts --testNamePattern=\"should check if user is following target user\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/api/services/__tests__/social.test.ts --testNamePattern=\"should follow a user\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/api/services/__tests__/social.test.ts --testNamePattern=\"should unfollow a user\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/social/__tests__/useWiggLikes.test.ts --testNamePattern=\"should handle Promise.all errors in useEffect without crashing\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- --reporter=verbose)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/components/__tests__/WiggPointForm.test.tsx --testNamePattern=\"should use WIGG Point Service instead of direct Supabase calls\" --reporter=verbose)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/components/__tests__/WiggPointForm.test.tsx)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/api/services/__tests__/wiggPersistence.test.ts --reporter=verbose)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/api/services/__tests__/wiggPersistence.test.ts)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/api/services/__tests__/wiggPersistence.test.ts --testNamePattern=\"should save WIGG rating successfully\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/api/services/__tests__/wiggPersistence.test.ts --testNamePattern=\"should save moment successfully\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/social/__tests__/useWiggComments.test.ts --testNamePattern=\"should use social service instead of direct Supabase calls\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/hooks/social/__tests__/useWiggComments.test.ts)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/__tests__/featureFlags.test.ts)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/lib/__tests__/featureFlags.test.ts --testNamePattern=\"should return true when feature flag is enabled via defaultValue\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/pages/__tests__/MediaDetails.migration.test.tsx)",
      "Bash(timeout 60s npx playwright test:*)",
      "Bash(git branch:*)",
      "Bash(git fetch:*)",
      "Bash(git cherry-pick:*)",
      "Bash(git diff:*)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/components/onboarding/__tests__/ src/components/media/__tests__/MediaTile.auth.test.tsx --run)",
      "Bash(gh pr create --title \"fix: UI improvements - onboarding modal centering, accessibility, and form fixes\" --body \"$(cat <<''EOF''\n## Summary\n\nThis PR combines multiple UI/UX improvements:\n\n### 1. Onboarding Modal Fix\n- **Fixed**: Modal stuck to bottom of screen on mobile devices\n- **Changed**: `items-end md:items-center` → `items-center` for consistent vertical centering across all screen sizes\n- **Impact**: Improved mobile UX - modal now appears centered on all devices\n\n### 2. Debug Button Cleanup\n- **Removed**: \"Break the world\" error button from `main.tsx`\n- **Reason**: Development-only test button that shouldn''t be in codebase\n\n### 3. Accessibility Improvements (from PR #13)\n- Added skip link and main landmark for keyboard navigation\n- Enhanced semantic structure with proper ARIA labels\n- Improved focus management in onboarding dialog\n- WCAG 2.1 AA compliance improvements for header/search controls\n- Live regions for screen reader announcements\n\n### 4. Form Submission Fix (from PR #18)\n- **Fixed**: MediaTile add button triggering parent form submissions\n- **Changed**: Added `type=\"button\"` to prevent form submission\n- **Added**: Regression test to prevent future issues\n\n## Testing\n\n### Onboarding Modal\n✅ All onboarding tests passing (6/6)\n```bash\nnpm run test -- src/components/onboarding/__tests__/\n```\n\n### Visual Testing\n- [ ] Verify modal appears centered on mobile (< 768px width)\n- [ ] Verify modal appears centered on desktop (≥ 1024px)\n- [ ] Verify modal appears right-aligned on tablets (768-1023px)\n- [ ] Test keyboard navigation (Tab, Escape, Arrow keys)\n- [ ] Test with screen reader\n\n### Form Behavior\n- [ ] Verify MediaTile add button doesn''t submit parent forms\n- [ ] Verify quick wigg modal opens correctly\n\n## Screenshots\n\nBefore: Modal stuck to bottom on mobile\nAfter: Modal centered on all screen sizes\n\n## Related Issues\n\nCloses issues related to:\n- Onboarding modal positioning on mobile\n- Accessibility compliance\n- Form submission bugs\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\nEOF\n)\")",
      "Bash(npm run build:dev:*)",
      "mcp__puppeteer__puppeteer_navigate",
      "mcp__puppeteer__puppeteer_screenshot",
      "mcp__puppeteer__puppeteer_evaluate",
      "mcp__puppeteer__puppeteer_click",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/components/onboarding/__tests__/OnboardingFlow.test.tsx --testNamePattern=\"scrolls to top when modal opens to ensure visibility on mobile\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/components/onboarding/__tests__/)",
      "Bash(timeout 5 bash -c \"until curl -s http://localhost:8080 > /dev/null; do sleep 1; done && echo ''Server is ready''\")",
      "Bash(pkill:*)",
      "Bash(timeout:*)",
      "Bash(gh pr create:*)",
      "Bash(gh pr edit:*)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/components/media/__tests__/MediaTile.auth.test.tsx --testNamePattern=\"should navigate to add-wigg page without submitting surrounding forms\" --reporter=verbose)",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm test -- src/components/media/__tests__/MediaTile.auth.test.tsx --testNamePattern=\"should navigate to add-wigg page without submitting surrounding forms\")",
      "Bash(VITE_SUPABASE_URL=https://test.supabase.co VITE_SUPABASE_PUBLISHABLE_KEY=test_key npm run test -- src/components/media/__tests__/MediaTile)",
      "Bash(git log:*)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "C:\\Users\\gatli\\Projects"
    ]
  },
  "hooks": {
    "PreToolUse": [],
    "UserPromptSubmit": [],
    "SessionStart": []
  }
}