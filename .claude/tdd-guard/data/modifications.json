{
  "session_id": "e91c461e-d935-40ca-9658-b10652d9eed9",
  "transcript_path": "C:\\Users\\gatli\\.claude\\projects\\C--Users-gatli-Projects-wigg\\e91c461e-d935-40ca-9658-b10652d9eed9.jsonl",
  "hook_event_name": "PreToolUse",
  "tool_name": "Edit",
  "tool_input": {
    "file_path": "C:\\Users\\gatli\\Projects\\wigg\\src\\data\\hooks\\useSocialData.ts",
    "old_string": "export const useSocialData = (pointId: string, userId: string) => {\n  return {\n    isLoading: true,\n    likeCount: undefined,\n    hasUserLiked: undefined\n  };\n};",
    "new_string": "import { useQuery } from '@tanstack/react-query';\nimport { socialClient } from '../clients/socialClient';\n\nexport const useSocialData = (pointId: string, userId: string) => {\n  const likeCountQuery = useQuery({\n    queryKey: ['likeCount', pointId],\n    queryFn: () => socialClient.getLikeCount(pointId),\n    enabled: !!pointId\n  });\n\n  const hasUserLikedQuery = useQuery({\n    queryKey: ['hasUserLiked', pointId, userId],\n    queryFn: () => socialClient.hasUserLiked(pointId, userId),\n    enabled: !!pointId && !!userId\n  });\n\n  return {\n    isLoading: likeCountQuery.isLoading || hasUserLikedQuery.isLoading,\n    likeCount: likeCountQuery.data?.success ? likeCountQuery.data.data : undefined,\n    hasUserLiked: hasUserLikedQuery.data?.success ? hasUserLikedQuery.data.data : undefined,\n    error: likeCountQuery.error || hasUserLikedQuery.error\n  };\n};"
  }
}