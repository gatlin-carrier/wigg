{
  "session_id": "e91c461e-d935-40ca-9658-b10652d9eed9",
  "transcript_path": "C:\\Users\\gatli\\.claude\\projects\\C--Users-gatli-Projects-wigg\\e91c461e-d935-40ca-9658-b10652d9eed9.jsonl",
  "hook_event_name": "PreToolUse",
  "tool_name": "Edit",
  "tool_input": {
    "file_path": "C:\\Users\\gatli\\Projects\\wigg\\src\\hooks\\social\\useWiggCommentsDataLayer.ts",
    "old_string": "export function useWiggCommentsDataLayer(pointId?: string) {\n  return {\n    comments: [],\n    loading: false,\n    addComment: async () => {},\n    deleteComment: async () => {},\n    refresh: async () => {},\n    canComment: false,\n  };\n}",
    "new_string": "import { useQuery } from '@tanstack/react-query';\nimport { socialClient } from '../../data/clients/socialClient';\nimport { useAuth } from '../useAuth';\n\nexport interface WiggComment {\n  id: string;\n  userId: string;\n  username: string;\n  content: string;\n  createdAt: string;\n}\n\nexport function useWiggCommentsDataLayer(pointId?: string) {\n  const { user } = useAuth();\n\n  const commentsQuery = useQuery({\n    queryKey: ['comments', pointId],\n    queryFn: () => socialClient.getComments(pointId || ''),\n    enabled: !!pointId\n  });\n\n  return {\n    comments: commentsQuery.data || [],\n    loading: commentsQuery.isLoading || commentsQuery.isPending,\n    addComment: async () => {},\n    deleteComment: async () => {},\n    refresh: async () => {},\n    canComment: Boolean(user?.id && pointId),\n  };\n}"
  }
}